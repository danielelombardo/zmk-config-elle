#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <1000>; };
&lt { tapping-term-ms = <200>; };

#define AZ  0
#define NU  1
#define FU  2
#define MU  3
#define NV  4

#define ASH(l) &tkp LS(l) l
#define BT(d) &bt BT_SEL d
#define COPYPASTE &tkp LG(C) LG(V)

#define U_MOUSE_MOVE_MAX 1000 /* max speed. default is 600 */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOV_U MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOV_D MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOV_L MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOV_R MOVE_HOR(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 20 /* <--- New max speed setting (default: 10) */
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCR_U SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCR_D SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCR_L SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCR_R SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv { acceleration-exponent=<1>; time-to-max-speed-ms = <1000>;};
&mwh { acceleration-exponent=<0>; time-to-max-speed-ms = <1500>;};

/ { 
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
        tog1:     tog1     { compatible = "zmk,behavior-macro"; label = "ZM_tog1";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &to 1>; };
        tog2:     tog2     { compatible = "zmk,behavior-macro"; label = "ZM_tog2";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &to 2>; };
        tog3:     tog3     { compatible = "zmk,behavior-macro"; label = "ZM_tog3";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &to 3>; };
        tog4:     tog4     { compatible = "zmk,behavior-macro"; label = "ZM_tog4";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &to 4>; };
    };

    behaviors {
        tosl: togl_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "TOGL_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&tog>, <&sl>; }; 
        mokp: moml_kp      { compatible = "zmk,behavior-hold-tap"; label = "MOML_KP";      #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&kp>; }; 
        tkp:  two_kp       { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&kp>; }; 
        
        moto: mom_tog_l    { compatible = "zmk,behavior-hold-tap"; label = "MOM_TOG_L";    #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; }; 
        mosl: moml_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 

        guitab: gui_tab    { compatible = "zmk,behavior-mod-morph"; label = "GUI_TAB"; #binding-cells = <0>; 
            bindings = <&kt LGUI>, <&kp TAB>; mods = <(MOD_LGUI)>; };
    };

    combos {
        compatible = "zmk,combos";
        combo_num { timeout-ms = <50>; key-positions = <11 12>; bindings = <&to FU>; };
        combo_fun { timeout-ms = <50>; key-positions = <12 13>; bindings = <&to NU>; };
        combo_mou { timeout-ms = <50>; key-positions = <16 17>; bindings = <&to MU>; };
        combo_nav { timeout-ms = <50>; key-positions = <17 18>; bindings = <&to NV>; };
        combo_zero { timeout-ms = <50>; key-positions = <16 18>; bindings = <&to 0>; };
    };
 
    keymap {
        compatible = "zmk,keymap";
        abc {
            bindings = <
                ASH(W)  ASH(C)  ASH(H)  ASH(M)  ASH(Q)        &key_repeat     ASH(U)  ASH(I)  ASH(O)  ASH(J) 
                ASH(D)  ASH(S)  ASH(R)  ASH(T)  ASH(Z)        &kp BKSP        ASH(N)  ASH(E)  ASH(A)  ASH(L) 
                ASH(F)  ASH(G)  ASH(X)  ASH(V)  &tosl NV MU   &mokp NU SPACE  ASH(P)  ASH(Y)  ASH(K)  ASH(B) 
            >;
        };

        num {
            bindings = <
                ASH(GRAVE)  ASH(SLASH) ASH(EQUAL) ASH(MINUS) ASH(BSLH)     &trans  ASH(N7)  ASH(N8)  ASH(N9)  &none 
                ASH(COMMA)  ASH(DOT)   ASH(SEMI)  ASH(SQT)   &none         &trans  ASH(N4)  ASH(N5)  ASH(N6)  ASH(N0) 
                ASH(LBKT)   ASH(RBKT)  &kp CAPS   &caps_word &trans        &to 0   ASH(N1)  ASH(N2)  ASH(N3)  &none 
            >;
        };

        fun {
            bindings = <
                &kp C_BRI_UP  &kp C_VOL_UP BT(1)  BT(0)  &none       &trans  &kp F7  &kp F8  &kp F9  &kp F10 
                &kp C_BRI_DN  &kp C_VOL_DN BT(3)  BT(2)  &bt BT_CLR  &trans  &kp F4  &kp F5  &kp F6  &kp F11 
                &none         &kp C_MUTE   &none  &none  &trans      &to 0   &kp F1  &kp F2  &kp F3  &kp F12 
            >;
        };

        mou {
            bindings = <
                &none      &tog4      &kt LSHFT  &tog3     &trans    &trans    &mwh SCR_R  &mmv MOV_U  &mwh SCR_L  &mwh SCR_D 
                &rls_mods  &kt LCTRL  &kt LGUI   &kt LALT  &trans    &trans    &mmv MOV_L  &mmv MOV_D  &mmv MOV_R  &mwh SCR_U 
                &kp PSCRN  &tog1      &none      &tog2     &to 0     &mkp LCLK &mkp RCLK   &trans      &kp K_APP   &to 0 
            >;
        };

        nav { 
            bindings = <
                &trans     &kp ESC    &sk LSHFT  &kp TAB   &trans    &trans  &kp HOME  &kp UP    &kp END    &kp INS 
                &rls_mods  &sk LCTRL  &sk LGUI   &sk LALT  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp ENTER 
                &kp SPACE  COPYPASTE  &trans     &trans    &trans    &to 0   &kp PG_UP &guitab   &kp PG_DN  &kp DEL 
            >;
        };

    };
};