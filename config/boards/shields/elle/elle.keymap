#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <1000>; };
&lt { tapping-term-ms = <200>; };

#define AZ  0
#define NU  1
#define FU  2
#define NV  3
#define MU  4
#define SY  5
#define SM  6

#define ASH(l) &tkp LS(l) l
#define ASL(l) &tkps LS(l) l
#define BT(d) &bt BT_SEL d
#define COPYPASTE &tkp LG(C) LG(V)

#define U_MOUSE_MOVE_MAX 1100 /* max speed. default is 600 */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOV_U MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOV_D MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOV_L MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOV_R MOVE_HOR(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 20 /* <--- New max speed setting (default: 10) */
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCR_U SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCR_D SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCR_L SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCR_R SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv { acceleration-exponent=<1>; time-to-max-speed-ms = <1300>;};
&mwh { acceleration-exponent=<0>; time-to-max-speed-ms = <1500>;};

/ { 
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
        tog_nm:   tog_nm   { compatible = "zmk,behavior-macro"; label = "ZM_tog_nm"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &to NV &tog MU>; };
        tog1:     tog1     { compatible = "zmk,behavior-macro"; label = "ZM_tog1";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &tog 1>; };
        tog2:     tog2     { compatible = "zmk,behavior-macro"; label = "ZM_tog2";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &tog 2>; };
        tog3:     tog3     { compatible = "zmk,behavior-macro"; label = "ZM_tog3";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &tog 3>; };
        tog5:     tog5     { compatible = "zmk,behavior-macro"; label = "ZM_tog5";   #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp LSHFT &tog 5>; };
    };

    behaviors {
        mosl: moml_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        mokp: moml_kp      { compatible = "zmk,behavior-hold-tap"; label = "MOML_KP";      #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&kp>; }; 
        tkp:  two_kp       { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&kp>; }; 
        tkps: two_kp_slow  { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP_SLOW";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <300>; bindings = <&kp>, <&kp>; }; 
        
        moto: mom_tog_l    { compatible = "zmk,behavior-hold-tap"; label = "MOM_TOG_L";    #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; }; 
        tosl: togl_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "TOGL_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&tog>, <&sl>; }; 
    };
 
    keymap {
        compatible = "zmk,keymap";
        abc {
            bindings = <
                ASH(W)  ASH(C)  ASH(H)  ASH(M)  ASH(Q)        &key_repeat     ASH(U)  ASH(I)  ASH(O)  ASH(J) 
                ASH(D)  ASH(S)  ASH(R)  ASH(T)  ASH(Z)        &kp BKSP        ASH(N)  ASH(E)  ASH(A)  ASH(L) 
                ASL(F)  ASL(G)  ASL(X)  ASL(V)  &mosl NV SM   &mokp NU SPACE  ASL(P)  ASL(Y)  ASL(K)  ASL(B) 
            >;
        };

        num {
            bindings = <
                &none  ASH(N6)  ASH(N5)  ASH(N4)  &none     &trans  ASH(N0)  &caps_word  &kp CAPS  &none 
                &none  ASH(N3)  ASH(N2)  ASH(N1)  &none     &trans  ASH(N7)  ASH(N8)     ASH(N9)   &none 
                &none  &none    &none    &none    &trans    &to 0   &none    &none       &none     &none 
            >;
        };

        fun {
            bindings = <
                &none  &kp F4  &kp F5  &kp F6  &none      &trans  &kp F10  &kp F11  &kp F12  &none 
                &none  &kp F1  &kp F2  &kp F3  &none      &trans  &kp F7   &kp F8   &kp F9   &none 
                &none  &none   &none   &none   &trans     &to 0   &none    &none    &none    &none 
            >;
        };

        nav {
            bindings = <
                &kp PSCRN  &kp ESC    &sk LSHFT  &kp TAB   &trans    &trans  &kp HOME  &kp UP   &kp END    &kp INS 
                &rls_mods  &sk LCTRL  &sk LGUI   &sk LALT  &trans    &trans  &kp LEFT  &kp DOWN &kp RIGHT  &kp ENTER 
                &kp SPACE  COPYPASTE  &trans     &trans    &trans    &to 0   &kp PG_UP &none    &kp PG_DN  &kp DEL 
            >;
        };

        mou {
            bindings = <
                &trans  &trans  &trans  &trans  &trans     &trans    &mwh SCR_R  &mmv MOV_U  &mwh SCR_L  &mwh SCR_D 
                &trans  &trans  &trans  &trans  &trans     &trans    &mmv MOV_L  &mmv MOV_D  &mmv MOV_R  &mwh SCR_U 
                &trans  &trans  &trans  &trans  &none      &mkp LCLK &mkp RCLK   &trans      &kp K_APP   &to 0
            >;
        };

        sys {
            bindings = <
                &none  &none  &none  &none  &none       &none  &kp C_BRI_DN  &none       &kp C_BRI_UP  &none 
                BT(3)  BT(2)  BT(1)  BT(0)  &bt BT_CLR  &none  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &none 
                &none  &none  &none  &none  &trans      &to 0  &none  &none  &none  &none 
           >;
        };

        sym {
            bindings = <
                &tog5      &tog3      &kt LSHFT  &tog1     &tog2        &trans     ASH(MINUS) ASH(EQUAL) ASH(SLASH) ASH(GRAVE) 
                &rls_mods  &kt LCTRL  &kt LGUI   &kt LALT  &kp ENTER    &trans     ASH(SQT)   ASH(SEMI)  ASH(DOT)   ASH(LBKT) 
                &none      &none      &none      &none     &tog_nm      ASH(COMMA) &none      &none      ASL(BSLH)  ASL(RBKT)
            >;
        };

    };
};