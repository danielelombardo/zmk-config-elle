#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <1000>; };
&lt { tapping-term-ms = <200>; };

#define AZ  0
#define NU  1
#define FU  2
#define MU  3
#define NV  4
#define SY  5

#define ASH(l) &tkp LS(l) l
#define BT(d) &bt BT_SEL d
#define COPYPASTE &tkp LG(C) LG(V)

#define U_MOUSE_MOVE_MAX 1200 /* max speed. default is 600 */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOV_U MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOV_D MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOV_L MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOV_R MOVE_HOR(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 20 /* <--- New max speed setting (default: 10) */
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCR_U SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCR_D SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCR_L SCROLL_HOR(U_MOUSE_SCROLL_MAX)
#define SCR_R SCROLL_HOR(-U_MOUSE_SCROLL_MAX)

&mmv { acceleration-exponent=<2>; time-to-max-speed-ms = <1000>;};
&mwh { acceleration-exponent=<1>; time-to-max-speed-ms = <1500>;};

/ { 
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
        tog_nm:   tog_nm   { compatible = "zmk,behavior-macro"; label = "ZM_tog_nm"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &tog NV &tog MU>; };
    };

    behaviors {
        mosl: moml_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        tosl: togl_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "TOGL_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&tog>, <&sl>; }; 
        mokp: moml_kp      { compatible = "zmk,behavior-hold-tap"; label = "MOML_KP";      #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&kp>; }; 
        moto: mom_tog_l    { compatible = "zmk,behavior-hold-tap"; label = "MOM_TOG_L";    #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; }; 
        tkp:  two_kp       { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&kp>; }; 
        mokr: mom_key_rep  { compatible = "zmk,behavior-hold-tap"; label = "MOM_KEY_REP";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&key_repeat>; }; 

        bkspdel: back_del  { compatible = "zmk,behavior-mod-morph"; label = "BACK_DEL";   #binding-cells = <0>; bindings = <&kp BKSP>, <&kp DEL>; mods = <(MOD_LSFT)>; }; 
    };
 
    keymap {
        compatible = "zmk,keymap";
        abc {
            bindings = <
                ASH(W)  ASH(C)  ASH(H)  ASH(M)  ASH(Q)         &tog_nm         ASH(U)  ASH(I)  ASH(O)  ASH(Y) 
                ASH(D)  ASH(S)  ASH(R)  ASH(T)  ASH(Z)         &bkspdel        ASH(N)  ASH(E)  ASH(A)  ASH(L) 
                ASH(F)  ASH(G)  ASH(X)  ASH(V)  &mokr NV 0     &mokp NU SPACE  ASH(K)  ASH(J)  ASH(B)  ASH(P) 
            >;
        };

        num {
            bindings = <
                ASH(SEMI)   ASH(N6)   ASH(N5)  ASH(N4)  &caps_word  &kp CAPS  ASH(MINUS)  ASH(EQUAL)  ASH(N0)    ASH(RBKT) 
                ASH(SQT)    ASH(N3)   ASH(N2)  ASH(N1)  &none       &none     ASH(N7)     ASH(N8)     ASH(N9)    ASH(LBKT) 
                ASH(COMMA)  ASH(DOT)  &none    &tog NV  &trans      &tog NU   ASH(GRAVE)  &none       ASH(BSLH)  ASH(SLASH)
            >;
        };

        fun {
            bindings = <
                &none  &kp F4  &kp F5  &kp F6  &none      &none    &kp F10  &kp F11  &kp F12  &none 
                &none  &kp F1  &kp F2  &kp F3  &none      &none    &kp F7   &kp F8   &kp F9   &none 
                &none  &none   &none   &none   &trans     &tog FU  &none    &none    &none    &none 
            >;
        };

        nav {
            bindings = <
                &kp PSCRN  &kp ESC    &kp SPACE  &kp TAB    &trans      &kp PG_UP  &kp HOME   &kp UP    &kp END    &kp INS 
                &sk LALT   &sk LCTRL  &sk LGUI   &sk LSHFT  &trans      &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &kp ENTER 
                &rls_mods  COPYPASTE  &trans     &sl SY     &tog NV     &tog NU    &tog FU    &none     &tog SY    &bkspdel
            >;
        };

        mou {
            bindings = <
                &trans  &trans  &trans  &trans  &trans      &trans     &mwh SCR_L  &mmv MOV_U  &mwh SCR_R  &mwh SCR_U 
                &trans  &trans  &trans  &trans  &trans      &kp K_APP  &mmv MOV_L  &mmv MOV_D  &mmv MOV_R  &mwh SCR_D 
                &trans  &trans  &trans  &trans  &tog MU     &mkp LCLK  &mkp RCLK   &trans      &trans      &trans
            >;
        };

        sym {
            bindings = <
                &trans    &trans     &trans    &trans     &trans     &none       &kp C_BRI_DN  &kp C_BRI_UP  &none       &none 
                &kt LALT  &kt LCTRL  &kt LGUI  &kt LSHFT  &trans     &bt BT_CLR  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &none 
                &trans    &trans     &trans    &trans     &tog SY    &tog SY     BT(0)  BT(1)  BT(2)  BT(3) 

           >;
        };
    };
};